name: Deploy Playbook to Github Pages and Svelte components to NPM.

on:
    push:
        branches:
            - deploy
        # tags:
        #     - v*.*.*

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: 'pages'
    cancel-in-progress: true

jobs:
    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Pages
              uses: actions/configure-pages@v2

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Install dependencies
              run: |
                  npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
                  npm ci --ignore-scripts
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Build
              run: npm run storybook:build

            # this doesn't seem to work
            # - name: Install Playwright
            #   run: npx playwright install --with-deps
            # - name: Run Storybook tests
            #   run: ./node_modules/.bin/test-storybook
            #   env:
            #       TARGET_URL: '${{ github.event.deployment_status.target_url }}'
            # - name: Serve Storybook and run tests
            #   run: |
            #       npx concurrently -k -s first -n "Storybook,tests" -c "green,blue" \
            #       "npx http-server static --port 6006 --silent" \
            #       "npx wait-on tcp:6006 && ./node_modules/.bin/test-storybook"

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v1
              with:
                  path: './static'

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v1

            - name: DEBUG!
              run: echo ${{ github.event.deployment_status }}

            - name: Run Storybook tests
              run: ./node_modules/.bin/test-storybook --url https://ui.surveyplanet.com
              # env:
              #     TARGET_URL: '${{ github.event.deployment_status.target_url }}'

            - name: Publish !!! - DRY RUN - !!!
              run: npm publish --access public --dry-run
